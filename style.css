body {
    margin: 0;
    /* overflow: hidden; Removed */
    background-color: #222; /* Dark background */
    font-family: sans-serif;
    color: white;
    display: flex; /* Use flexbox for body */
    height: 100vh; /* Make body fill viewport height */
}

#app-container { /* NEW */
    display: flex;
    flex-direction: column;
    flex-grow: 1; /* Allow container to fill body */
    width: 100%; /* Ensure it takes full width */
    overflow: hidden; /* Prevent scrollbars within the app */
}

canvas {
    display: block; /* Remove extra space below canvas */
    /* width: 100vw; Removed */
    /* height: 100vh; Removed */
    width: 100%; /* Take full width of parent */
    height: 0; /* Allow flex-grow to determine height */
    flex-grow: 1; /* Allow canvas to take up remaining space */
}

#ui-container {
    width: 100%;
    box-sizing: border-box;
    background-color: rgba(0, 0, 0, 0.9);
    padding: 12px 15px;
    display: flex;
    align-items: center; /* Align items vertically */
    justify-content: space-between; /* Push controls and stats apart */
    gap: 2%; /* Add a small gap between controls and stats (adjust as needed) */
    flex-wrap: nowrap; /* Prevent wrapping of controls/stats */
    flex-shrink: 0;
    border-top: 1px solid #444;
}

#controls-wrapper { /* NEW Style for the controls area */
    width: 85%;
    display: flex;
    align-items: center;
    gap: 15px; /* Gap between control groups */
    flex-wrap: wrap; /* Allow control groups to wrap */
    flex-shrink: 1; /* Allow controls to shrink if needed */
    flex-grow: 1; /* Allow controls to take up available space within 85% */
}

.ui-group { /* NEW Style for groups */
    display: flex;
    align-items: center;
    gap: 10px; /* Gap within groups */
    padding: 5px 8px;
    background-color: rgba(255, 255, 255, 0.05);
    border-radius: 4px;
    flex-shrink: 0; /* Prevent groups from shrinking too much */
    flex-wrap: wrap; /* Allow items within a group to wrap if needed */
}

#ui-container label {
    margin-right: 3px; /* Reduced margin */
    user-select: none; /* Prevent text selection on touch */
}

#ui-container label.checkbox-label { /* Specific style for checkbox label */
    cursor: pointer;
    padding: 4px 6px;
    border-radius: 3px;
    transition: background-color 0.2s ease;
}
#ui-container label.checkbox-label:hover {
    background-color: rgba(255, 255, 255, 0.1);
}

#ui-container input[type="range"] {
    cursor: pointer;
    vertical-align: middle;
    min-width: 100px; /* Ensure slider is wide enough */
}

#group-ruleset {
    display: flex;
    align-items: left;
    flex-wrap: wrap;
}

#ui-container input[type="text"] {
    padding: 6px 8px;
    border: 1px solid #555;
    background-color: #333;
    color: white;
    border-radius: 3px;
    font-size: 0.9em;
}

#ui-container input[type="checkbox"] {
    margin-right: -2px; /* Adjust spacing next to label */
    vertical-align: middle;
    transform: scale(1.1); /* Slightly larger checkbox */
}

#ui-container button {
    padding: 6px 12px; /* Increased padding for touch */
    cursor: pointer;
    background-color: #4a4a4a;
    border: 1px solid #666;
    color: white;
    border-radius: 4px;
    font-size: 0.95em;
    transition: background-color 0.2s ease, transform 0.1s ease;
    user-select: none; /* Prevent text selection on touch */
}
#ui-container button:hover {
    background-color: #5a5a5a;
}
#ui-container button:active {
    background-color: #6a6a6a;
    transform: scale(0.98);
}

#ui-container code {
    background-color: #333; /* Matched input bg */
    padding: 4px 6px;
    border-radius: 3px;
    font-size: 1.3em;
    font-weight: bold;
    font-family: monospace;
}

.rule-display-wrapper { /* Wrapper for better spacing */
    margin-left: 5px;
}

.separator { /* Keep separator for potential future use, but not currently used */
    color: #666;
    margin: 0 8px;
}

/* Stats Content Adjustments */
#stats-content {
    display: none;
    width: 10%; /* Set explicit width */
    flex-basis: auto; /* Override previous basis */
    flex-grow: 0;
    flex-shrink: 0; /* Prevent stats from shrinking */
    background-color: rgba(255, 255, 255, 0.08);
    padding: 8px 12px;
    border-radius: 4px;
    box-sizing: border-box; /* Include padding in width calculation */
}

#stats-content h4 {
    margin: 0 0 5px 0;
    font-size: 0.9em;
    font-weight: normal;
    border-bottom: 1px solid #555;
    padding-bottom: 3px;
    text-align: center;
}

#stats-content div {
    margin-bottom: 3px; /* Increased spacing */
    font-size: 0.9em;
}

#stats-content span {
    font-weight: bold;
    min-width: 45px; /* Adjusted */
    display: inline-block;
    text-align: right;
    margin-left: 5px;
    background-color: rgba(0,0,0,0.2);
    padding: 1px 4px;
    border-radius: 2px;
}

/* --- Ruleset Explainer Panel --- */
#rulesetExplainerPanel {
    position: fixed; /* Changed from absolute to fixed */
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 85%; /* Adjust width as needed */
    max-width: 1200px; /* Max width */
    height: 80%; /* Adjust height */
    max-height: 800px; /* Max height */
    background-color: rgba(40, 40, 40, 0.98); /* Slightly lighter than body */
    border: 2px solid #555;
    border-radius: 8px;
    box-shadow: 0 5px 25px rgba(0,0,0,0.5);
    padding: 20px;
    box-sizing: border-box;
    z-index: 1000; /* Ensure it's on top */
    overflow-y: auto; /* Allow scrolling if content overflows */
    color: #eee;
    display: flex; /* Use flexbox for layout */
    flex-direction: column; /* Stack elements vertically */
}

#rulesetExplainerPanel.hidden {
    display: none;
}

#closeExplainerButton {
    position: absolute;
    top: 10px;
    right: 15px;
    background: none;
    border: none;
    color: #ccc;
    font-size: 2em;
    font-weight: bold;
    cursor: pointer;
    padding: 0 5px;
    line-height: 1;
}
#closeExplainerButton:hover {
    color: white;
}

#rulesetExplainerPanel h3 {
    margin-top: 0;
    margin-bottom: 10px;
    text-align: center;
    border-bottom: 1px solid #555;
    padding-bottom: 10px;
}

.explainer-text {
    font-size: 0.9em;
    color: #ccc;
    margin-bottom: 15px;
    text-align: center;
    line-height: 1.6; /* Improve readability */
}

/* --- Ruleset Explainer Grid --- */
#rulesetExplainerGrid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr)); /* Responsive grid */
    gap: 20px 15px; /* Row and column gap */
    flex-grow: 1; /* Allow grid to fill available space */
    padding: 10px;
    background-color: rgba(0,0,0,0.1);
    border-radius: 4px;
}

/* --- Individual Rule Visualization --- */
.rule-viz {
    position: relative;
    width: 100px; /* Fixed width for consistency */
    height: 110px; /* Fixed height */
    margin: auto; /* Center in grid cell */
    transform: scale(0.8); /* Scale down slightly if needed */
}
/* --- Hexagon Base Styles (Pointy-Top using CSS Clip Path) --- */
.hexagon {
    position: absolute;
    width: 40px; /* Base size - Adjust if needed */
    height: calc(40px * 1.154701); /* height = width * 2 / sqrt(3) â‰ˆ width * 1.1547 */
    /* Pointy-top polygon */
    clip-path: polygon(0% 50%, 25% 0%, 75% 0%, 100% 50%, 75% 100%, 25% 100%);
    background-color: #555; /* Default/fallback */
    box-sizing: border-box;
}

/* Hexagon States (Remain the same) */
.hexagon.state-0 {
    background-color: #404040; /* Darker grey for inactive */
}
.hexagon.state-1 {
    background-color: #FFFF00; /* Yellow for active */
}

/* Center Hexagon (Remains the same - centered) */
.center-hex {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%) scale(1.0); /* Slightly larger center */
    z-index: 1;
}

/* Inner Hexagon (Result - Adjust height calculation if base width changed) */
.inner-hex {
    width: 60%;
    height: calc(60% * 1.154701); /* Maintain aspect ratio */
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%) scale(0.8);
    border: 1.0px solid #CCCCCC; /* ALWAYS show border */
    z-index: 2; /* Above center hex */
}

/* Neighbor Hexagons Positioning (Pointy-Top Arrangement) */
/* Adjust scale and offsets as needed for visual appeal */
.neighbor-hex {
    /* Scale neighbors down slightly */
    /* Center the scaled neighbor on its target position */
    transform-origin: center center;
    transform: translate(-50%, -50%) scale(0.9);
}
/* Standard neighbor order: 0:SE, 1:NE, 2:N, 3:NW, 4:SW, 5:S */
/* Positions are % of the .rule-viz container (100x110px approx) */
/* Fine-tune these percentages for best visual fit */
.neighbor-0 { top: 70%; left: 23%; }   /* Bottom-left */
.neighbor-1 { top: 31%; left: 23%; }   /* Top-left */
.neighbor-2 { top: 88%; left: 50%; }   /* Top */
.neighbor-3 { top: 31%; left: 78%; }   /* Top-Right */
.neighbor-4 { top: 70%; left: 78%; }   /* Bottom-Right */
.neighbor-5 { top: 12%; left: 50%; }   /* Bottom */


/* Inline hexagons for the explanation text (Update clip-path and height) */
.inline-hex {
    display: inline-block;
    width: 1em; /* Size relative to text */
    height: calc(1em * 1.154701); /* Pointy-top aspect ratio */
    /* Pointy-top polygon */
    clip-path: polygon(0% 50%, 25% 0%, 75% 0%, 100% 50%, 75% 100%, 25% 100%);
    vertical-align: middle;
    margin: 0 2px;
    position: relative; /* Needed for inner hex */
    box-sizing: border-box;
}
.inline-hex-inner {
    position: absolute;
    display: inline-block;
    width: 60%;
    height: calc(60% * 1.154701); /* Pointy-top aspect ratio */
     /* Pointy-top polygon */
    clip-path: polygon(0% 50%, 25% 0%, 75% 0%, 100% 50%, 75% 100%, 25% 100%);
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    border: 1px solid #CCCCCC;
    box-sizing: border-box;
}
/* State colors remain the same */
.inline-hex.state-0 { background-color: #404040; }
.inline-hex.state-1 { background-color: #FFFF00; }
.inline-hex-inner.state-0 { background-color: #404040; }
.inline-hex-inner.state-1 { background-color: #FFFF00; }