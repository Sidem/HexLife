/* Ensure the editor panel fits correctly within the mobile view container */
#editor-view #rulesetEditorPanel {
    position: relative; /* Override fixed positioning from desktop */
    width: 100% !important;
    height: 100% !important;
    top: 0 !important;
    left: 0 !important;
    transform: none !important;
    border: none;
    box-shadow: none;
    background-color: transparent;
    display: flex;
    flex-direction: column;
}

#editor-view .panel-content-area {
    flex-grow: 1;
    overflow-y: auto;
    padding-right: 0;
}

#editor-view .radio-switch-input {
    display: none;
}

#editor-view .editor-controls {
    flex-direction: row;
    align-items: center;
}

#editor-view .editor-hex-input {
    width: auto;
}

#editor-view #rulesetEditorGrid {
    grid-template-columns: repeat(8, minmax(39px, 1fr));
    gap: 1px;
    margin-bottom: 200px;
}

#editor-view #rotationalSymmetryRulesetEditorGrid {
    grid-template-columns: repeat(4, minmax(39px, 1fr));
    margin-bottom: 200px; 
}

/* Responsive layout for the detailed 128-rule grid */
#rulesetEditorGrid {
    grid-template-columns: repeat(16, minmax(39px, 1fr));
    gap: 1px;
}

#editor-view .neighbor-count-rule-viz .hexagon.center-hex {
    transform: scale(0.8) translate(-25px, -53px);
}

#editor-view #neighborCountRulesetEditorGrid {
    grid-template-columns: repeat(7, 13.2%);
}

/* Make Rotational Symmetry grid more compact on mobile */
#rotationalSymmetryRulesetEditorGrid {
    grid-template-columns: repeat(auto-fill, minmax(80px, 1fr));
    gap: 2px;
}

/* Adjust scaling of the rule visualization hexagons */
.r-sym-rule-viz .rule-viz-hex-display {
    transform: scale(0.4) translate(0px, -50px);
    margin-bottom: -40px;
}